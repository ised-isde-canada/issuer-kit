{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}${SUFFIX}-deployment-template",
    "annotations": {
      "description": "Deployment template for a NodeJS server connected to a MongoDB database.",
      "tags": "nodejs",
      "iconClass": "icon-nodejs"
    }
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "stringData": {
        "smtp-host": "${SMTP_SERVER_ADDRESS}",
        "smtp-port": "${SMTP_SERVER_PORT}",
        "admin-email": "${ADMIN_EMAIL}",
        "invite-subject": "${EMAIL_SUBJECT}"
      },
      "type": "Opaque"
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        },
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "${SERVICE_PORT}-tcp",
            "port": "${{SERVICE_PORT}}",
            "protocol": "TCP",
            "targetPort": "${{SERVICE_PORT}}"
          }
        ],
        "selector": {
          "name": "${NAME}${SUFFIX}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        },
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}${SUFFIX}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${SOURCE_IMAGE_NAME}:${TAG_NAME}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}${SUFFIX}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}${SUFFIX}",
            "labels": {
              "name": "${NAME}${SUFFIX}",
              "app": "${APP_NAME}${SUFFIX}",
              "app-group": "${APP_GROUP}",
              "role": "${ROLE}",
              "env": "${TAG_NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "${NAME}${SUFFIX}-app-config-volume",
                "configMap": {
                  "name": "${APP_CONFIG_MAP_NAME}${SUFFIX}",
                  "items": [
                    {
                      "key": "${APP_CONFIG_FILE_NAME}",
                      "path": "${APP_CONFIG_FILE_NAME}"
                    }
                  ]
                }
              },
              {
                "name": "${NAME}${SUFFIX}-schema-config-volume",
                "configMap": {
                  "name": "${APP_CONFIG_MAP_NAME}${SUFFIX}",
                  "items": [
                    {
                      "key": "${APP_SCHEMAS_FILE_NAME}",
                      "path": "${APP_SCHEMAS_FILE_NAME}"
                    }
                  ]
                }
              },
              {
                "name": "${NAME}${SUFFIX}-invite-template-volume",
                "configMap": {
                  "name": "${APP_CONFIG_MAP_NAME}${SUFFIX}",
                  "items": [
                    {
                      "key": "${APP_EMAIL_INVITE_FILE_NAME}",
                      "path": "${APP_EMAIL_INVITE_FILE_NAME}"
                    }
                  ]
                }
              }
            ],
            "containers": [
              {
                "name": "${NAME}${SUFFIX}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": "${{SERVICE_PORT}}",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 5,
                  "periodSeconds": 30,
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 20,
                  "httpGet": {
                    "path": "/",
                    "port": "${{SERVICE_PORT}}"
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 5,
                  "periodSeconds": 60,
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 20,
                  "httpGet": {
                    "path": "/",
                    "port": "${{SERVICE_PORT}}"
                  }
                },
                "env": [
                  {
                    "name": "PORT",
                    "value": "${SERVICE_PORT}"
                  },
                  {
                    "name": "DB_SERVICE",
                    "value": "${DB_SERVICE}${SUFFIX}"
                  },
                  {
                    "name": "DB_PORT",
                    "value": "${DB_PORT}"
                  },
                  {
                    "name": "DB_NAME",
                    "value": "${DB_NAME}"
                  },
                  {
                    "name": "DB_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DB_SERVICE}${SUFFIX}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "DB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DB_SERVICE}${SUFFIX}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "AGENT_ADMIN_URL",
                    "value": "http://${AGENT_SERVICE_NAME}${SUFFIX}:${AGENT_ADMIN_PORT}"
                  },
                  {
                    "name": "AGENT_ADMIN_API_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${AGENT_SERVICE_NAME}${SUFFIX}",
                        "key": "admin-api-key"
                      }
                    }
                  },
                  {
                    "name": "SMTP_HOST",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}${SUFFIX}",
                        "key": "smtp-host"
                      }
                    }
                  },
                  {
                    "name": "SMTP_PORT",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}${SUFFIX}",
                        "key": "smtp-port"
                      }
                    }
                  },
                  {
                    "name": "ADMIN_EMAIL",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}${SUFFIX}",
                        "key": "admin-email"
                      }
                    }
                  },
                  {
                    "name": "EMAIL_SUBJECT",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}${SUFFIX}",
                        "key": "invite-subject"
                      }
                    }
                  },
                  {
                    "name": "PUBLIC_SITE_URL",
                    "value": "${PUBLIC_SITE_URL}"
                  },
                  {
                    "name": "LOG_LEVEL",
                    "value": "${LOG_LEVEL}"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${NAME}${SUFFIX}-app-config-volume",
                    "mountPath": "${APP_CONFIG_MOUNT_PATH}${APP_CONFIG_FILE_NAME}",
                    "subPath": "${APP_CONFIG_FILE_NAME}"
                  },
                  {
                    "name": "${NAME}${SUFFIX}-schema-config-volume",
                    "mountPath": "${APP_CONFIG_MOUNT_PATH}${APP_SCHEMAS_FILE_NAME}",
                    "subPath": "${APP_SCHEMAS_FILE_NAME}"
                  },
                  {
                    "name": "${NAME}${SUFFIX}-invite-template-volume",
                    "mountPath": "${APP_CONFIG_MOUNT_PATH}${APP_EMAIL_INVITE_FILE_NAME}",
                    "subPath": "${APP_EMAIL_INVITE_FILE_NAME}"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "kind": "HorizontalPodAutoscaler",
      "apiVersion": "autoscaling/v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "spec": {
        "scaleTargetRef": {
          "kind": "DeploymentConfig",
          "name": "${NAME}${SUFFIX}"
        },
        "minReplicas": "${{MIN_REPLICAS}}",
        "maxReplicas": "${{MAX_REPLICAS}}"
      }
    },
    {
      "kind": "NetworkSecurityPolicy",
      "apiVersion": "secops.pathfinder.gov.bc.ca/v1alpha1",
      "metadata": {
        "name": "custom-${APP_NAME}-pods-to-api",
        "labels": {
          "name": "custom-${APP_NAME}-pods-to-api",
          "app": "${APP_NAME}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "spec": {
        "description": "Allow pods to talk to the internal api so deployments work.\nThis only needs to be specified once per environment.\n",
        "source": [
          [
            "$namespace=${NAMESPACE_NAME}-${TAG_NAME}"
          ]
        ],
        "destination": [
          [
            "int:network=internal-cluster-api-endpoint"
          ]
        ]
      }
    },
    {
      "kind": "NetworkSecurityPolicy",
      "apiVersion": "secops.pathfinder.gov.bc.ca/v1alpha1",
      "metadata": {
        "name": "custom-${APP_NAME}-${NAME}-policy",
        "labels": {
          "name": "custom-${APP_NAME}-${NAME}-policy",
          "app": "${APP_NAME}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "spec": {
        "description": "Allow the controller to talk to either the database or agent micro services.\n",
        "source": [
          [
            "role=${ROLE}",
            "app=${APP_NAME}",
            "env=${TAG_NAME}",
            "$namespace=${NAMESPACE_NAME}-${TAG_NAME}"
          ]
        ],
        "destination": [
          [
            "role=db",
            "app=${APP_NAME}",
            "env=${TAG_NAME}",
            "$namespace=${NAMESPACE_NAME}-${TAG_NAME}"
          ],
          [
            "role=agent",
            "app=${APP_NAME}",
            "env=${TAG_NAME}",
            "$namespace=${NAMESPACE_NAME}-${TAG_NAME}"
          ]
        ]
      }
    },
    {
      "kind": "NetworkSecurityPolicy",
      "apiVersion": "secops.pathfinder.gov.bc.ca/v1alpha1",
      "metadata": {
        "name": "${NAME}${SUFFIX}-to-external-network",
        "labels": {
          "name": "${NAME}${SUFFIX}-to-external-network",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "spec": {
        "description": "Allow the controller to access the internet.\n",
        "source": [
          [
            "role=${ROLE}",
            "app=${APP_NAME}${SUFFIX}",
            "env=${TAG_NAME}",
            "$namespace=${NAMESPACE_NAME}-${TAG_NAME}"
          ]
        ],
        "destination": [
          [
            "ext:network=any"
          ]
        ]
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the OpenShift resources associated to the server instance.",
      "required": true,
      "value": "issuer-kit-controller"
    },
    {
      "name": "APP_NAME",
      "displayName": "App Name",
      "description": "Used to group components together in the OpenShift console.",
      "required": true,
      "value": "issuer-kit"
    },
    {
      "name": "APP_GROUP",
      "displayName": "App Group",
      "description": "The name assigned to all of the deployments in this project.",
      "required": true,
      "value": "issuer-kit-controller"
    },
    {
      "name": "SUFFIX",
      "displayName": "Suffix",
      "description": "A suffix applied to all of the objects in this template.",
      "required": false,
      "value": ""
    },
    {
      "name": "ROLE",
      "displayName": "Role",
      "description": "The role of this service within the application - used for Network Policies",
      "required": true,
      "value": "controller"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "devex-von-tools"
    },
    {
      "name": "NAMESPACE_NAME",
      "displayName": "Namespace Name",
      "description": "The name of the namespace being deployed to..",
      "required": true,
      "value": "devex-von"
    },
    {
      "name": "SERVICE_PORT",
      "displayName": "Service Port",
      "required": true,
      "description": "The port exposed by the controller.",
      "value": "8080"
    },
    {
      "name": "DB_SERVICE",
      "displayName": "Database Service Name",
      "description": "The name of the database server/service.",
      "required": true,
      "value": "issuer-db"
    },
    {
      "name": "DB_PORT",
      "displayName": "Database Port",
      "required": true,
      "description": "The port exposed by the database service.",
      "value": "27017"
    },
    {
      "name": "DB_NAME",
      "displayName": "Database Name",
      "required": true,
      "description": "Name of the deployed database (see environment variables in deployed database).",
      "value": "issuer_db"
    },
    {
      "name": "SOURCE_IMAGE_NAME",
      "displayName": "Source Image Name",
      "description": "The name of the image to use for this resource.",
      "required": true,
      "value": "issuer-api"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "latest"
    },
    {
      "name": "AGENT_SERVICE_NAME",
      "displayName": "Agent Service name",
      "description": "Agent service name",
      "required": true,
      "value": "issuer-agent"
    },
    {
      "name": "AGENT_ADMIN_PORT",
      "displayName": "Agent Admin Port",
      "description": "Agent admin port",
      "required": true,
      "value": "8024"
    },
    {
      "name": "SMTP_SERVER_ADDRESS",
      "displayName": "SMTP Server Address",
      "description": "SMTP Server Address",
      "required": true,
      "value": ""
    },
    {
      "name": "SMTP_SERVER_PORT",
      "displayName": "SMTP Server Port",
      "description": "SMTP Server Port",
      "required": true,
      "value": ""
    },
    {
      "name": "ADMIN_EMAIL",
      "displayName": "Admin Email",
      "description": "The email address to be used as sender for outgoing messages.",
      "required": true,
      "value": ""
    },
    {
      "name": "EMAIL_SUBJECT",
      "displayName": "Invite Email Subject",
      "description": "The subject line for the email invites.",
      "required": true,
      "value": "Invite from Issuer-Kit"
    },
    {
      "name": "PUBLIC_SITE_URL",
      "displayName": "Public Site URL",
      "description": "Public Site URL",
      "required": true,
      "value": "https://issuer-kit.pathfinder.gov.bc.ca"
    },
    {
      "name": "LOG_LEVEL",
      "displayName": "Log Level",
      "description": "Log Level",
      "required": true,
      "value": "info"
    },
    {
      "name": "APP_CONFIG_MAP_NAME",
      "displayName": "Application Config Map Name",
      "description": "The name of the configuration map holding the data to configure the application.",
      "required": true,
      "value": "api-config"
    },
    {
      "name": "APP_CONFIG_MOUNT_PATH",
      "displayName": "Application Config Mount Path",
      "description": "The path to use to mount the configuration file(s).",
      "required": true,
      "value": "/opt/app-root/src/config/"
    },
    {
      "name": "APP_CONFIG_FILE_NAME",
      "displayName": "Application Config File Name",
      "description": "The name of the application configuration file.",
      "required": true,
      "value": "default.json"
    },
    {
      "name": "APP_SCHEMAS_FILE_NAME",
      "displayName": "Application Schemas Config File Name",
      "description": "The name of the application schemas configuration file.",
      "required": true,
      "value": "schemas.json"
    },
    {
      "name": "APP_EMAIL_INVITE_FILE_NAME",
      "displayName": "Application Email Invite File Name",
      "description": "The name of the application email invite file.",
      "required": true,
      "value": "invite-email.html"
    },
    {
      "name": "MIN_REPLICAS",
      "displayName": "Minimum Replicas",
      "description": "The minimum number of pods to have running.",
      "required": true,
      "value": "1"
    },
    {
      "name": "MAX_REPLICAS",
      "displayName": "Maximum Replicas",
      "description": "The maximum number of pods to have running.",
      "required": true,
      "value": "2"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "Resources CPU Request",
      "description": "The resources CPU request (in cores) for this build.",
      "required": true,
      "value": "10m"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "Resources CPU Limit",
      "description": "The resources CPU limit (in cores) for this build.",
      "required": true,
      "value": "300m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Resources Memory Request",
      "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "10Mi"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Resources Memory Limit",
      "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "256Mi"
    }
  ]
}